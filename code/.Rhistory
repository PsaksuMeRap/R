bolt
chemical
model4.3<-aov(Strength~Chemical+Bolt)
chemical= factor(c(rep(1:5), rep(1:5), rep(1:5), rep(1:5)))
model4.3<-aov(Strength~chemical+Bolt)
model4.3<-aov(Strength~chemical+bolt)
summary(model4.3)
model.tables(model4.3, "mean")
A <- c(17,14,13,13)
B <- c(14,124,13,8)
C <- c(12,12,10,9)
D <- c(13,11,11,9)
scores=data.frame(A,B,C,D)
scores1 = stack(scores)
test<-read.table("/Users/jasonrich/Documents/R Homework and working folder/test1.txt")
test<-read.table("/Users/jasonrich/Documents/R Homework and working folder/test1.txt")
test
test<-read.table("/Users/jasonrich/Documents/R Homework and working folder/test1.txt")
colnames(test) = c("wear", "car","position")
test
model4.21<-aov(wear~car+position)
model4.21<-aov(test$wear~teat$car+teat$position)
model4.21<-aov(test$wear~test$car+test$position)
summary(model4.21)
test<-read.table("/Users/jasonrich/Documents/R Homework and working folder/test1.txt")
colnames(test) = c("wear", "car","position", "tire")
model4.21<-aov(test$wear~test$car+test$position+test$tire)
summary(model4.21)
wear<-factor(test$wear)
car<-factor(test$car)
positiion<-factor(test$position)
tire<-factor(test$tire)
model4.21<-aov(wear~car+position+tire)
position<-factor(test$position)
model4.21<-aov(wear~car+position+tire)
colnames(test) = c("wear", "car","position", "tire")
car<-factor(test$car)
test<-read.table("/Users/jasonrich/Documents/R Homework and working folder/test1.txt")
colnames(test) = c("wear", "car","position", "tire")
car<-factor(test$car)
test<-read.table("/Users/jasonrich/Documents/R Homework and working folder/test1.txt")
position<-factor(test$position)
tire<-factor(test$tire)
model4.21<-aov(wear~car+position+tire)
model4.21<-aov(test$wear~car+position+tire)
attach(test)
model4.21<-aov(wear~car+position+tire)
model4.21<-aov(test$wear~car+position+tire)
test<-read.table("/Users/jasonrich/Documents/R Homework and working folder/test1.txt")
colnames(test) = c("wear", "car","position", "tire")
model4.21<-aov(test$wear~test$car+test$position+test$tire)
summary(model4.21)
test.glm<-glm(test$wear~test$car+test$position+test$tire)
test.glm
test.glm
install.packages("BUGS")
install.packages("WINBUGS")
install.packages("OPENBUGS")
install.packages(c("geometry", "ivpack", "lme4", "psych", "Rcpp", "Stack"))
install.packages(c("boot", "class", "cluster", "foreign", "KernSmooth", "MASS", "Matrix", "nlme", "nnet", "rpart", "spatial"), lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install.packages("R2OpenBUGS")
log(.5/.4)
log(6/4)
ls -l /Library/Frameworks/R.framework/Versions/
?update
?update
version
Sys.getenv("R_ARCH")
.Machine$sizeof.pointer
getwd()
MBP_data = read.table("MBP_R_DATA")
MBP_data = read.table("MBP_R_DATA.txt")
View(MBP_data)
MBP_data = read.table("MBP_R_DATA.txt")
View(MBP_data)
?colnames
data = read.table("MBP_R_DATA.txt")
View(MBP_data)
View(data)
MBP_data <- colnames("clientname", "job", "sessiondate", "datediff", "packageamount", "payment", "totaldue", "printsales", "totalsales")
attach(data)
MBP_data <- colnames("clientname", "job", "sessiondate", "datediff", "packageamount", "payment", "totaldue", "printsales", "totalsales")
MBVP_data <-read.table("MBP_R_DATA.txt")
attach(data)
colnames(MBP_data) <- c("clientname", "job", "sessiondate", "datediff", "packageamount", "payment", "totaldue", "printsales", "totalsales")
MBP_data <-read.table("MBP_R_DATA.txt")
colnames(MBP_data) <- c("clientname", "job", "sessiondate", "datediff", "packageamount", "payment", "totaldue", "printsales", "totalsales")
attach(MBP_data)
View()
View(MBP_data)
colnames(MBP_data) <- c("client_name", "job", "session_date", "date_diff", "package_amount", "payment", "total_due", "print_sales", "total_sales")
View(MBP_data)
View(MBP_data)
View(MBP_data)
install.packages("Hmisc")
install.packages("glmnet")
install.packages("forge")
MBP_factors <- factor(c("client_name", "job", "session_date", "date_diff", "package_amount", "payment", "total_due", "print_sales"))
MBP_factors
class(MBP_factor)
class(MBP_factors)
level(MBP_factors)
levels(MBP_factors)
table(MBP_data)
table(MBP_factors)
table(MBP_data)
lappy(MBP_data,table)
Iappy(MBP_data,table)
lapply(MBP_data,table)
MBP_hmisc <- varclus((MBP_factors, similarity="spear")  # spearman is the default anyway
combine.levels(MBP_factors,minlevel=.05)
combine.levels(MBP_factors, minlev=.05)
library(Hmisc)
combine.levels(MBP_factors, minlev=.05)
summary(MBP_factors)
summary(MBP_data)
length(MBP_data)
View(MBP_data)
MBP_data$total_sales
is.matrix(MBP_data)
names(MBP_data)
summary(MBP_data)
length(MBP_data)
is.matrix(MBP_data)
ncol(MBP_data)
nrow(MBP_data)
str(MBP_data)
is.data.frame(MBP_data)
library(car)
install.packages("car")
library(car)
car
library(car)
car
Prestige
is.data.frame(Prestige)
is.matrix(Prestige)
str(Prestige)
str(MBP_data)
library(Hmisc)
combine.levels(MBP_data, minlev=.05)
sort.list(MBP_data)
sort(MBP_data)
sort(MBP_data$client_name, MBP$job)
sort(MBP_data$client_name, MBP_data$job)
sort(MBP_data$client_name, MBP_data$job,partial = TRUE)
sort(MBP_data$client_name, MBP_data$job,partial = NULL)
sort.list(MBP_data$client_name, MBP_data$job,partial = NULL)
MBP_data$client_name
MBP_data$job
sort(MBP_data$client_name, partial = NULL)
sort.list(MBP_data$client_name, partial = NULL)
sort.list(MBP_data$job, partial=NULL)
combine.levels(MBP_data, minlev=.05)
combine.levels(MBP_data$total_sales, minlev=.05)
sort.list(MBP_data$total_sales, partial = NULL)
combine.levels(MBP_data$total_sales, minlev=.05)
MBP_data2<- as.matrix(MBP_data)
MBP_data2
summary(MBP_data2)
str(MBP_data2)
drop .MBP_data2
#------------------------#
drop.MBP_data2
drop(MBP_data2)
detach(MBP_data2)
View(MBP_data2)
MBP_data1 <- data.frame(var 1:8 = "client_name", "job", "session_date", "date_diff", "package_amount", "payment", "total_due", "print_sales", "total_sales")
MBP_data1 <- data.frame(x = MBP_data$client_name, MBP_data$job, MBP_data$session_date, MBP_data$date_diff, MBP_data$package_amount, MBP_data$payment, MBP_data$total_due, MBP_data$print_sales, y = MBP_data$total_sales)
str(MBP_data1)
MBP_data1 <- data.frame( name= MBP_data$client_name, job=MBP_data$job, sess_dt =MBP_data$session_date, dt_df =MBP_data$date_diff, pckge =MBP_data$package_amount, pmt =MBP_data$payment, due =MBP_data$total_due, prt_pmt =MBP_data$print_sales, prft = MBP_data$total_sales)
str(MBP_data1)
summary(MBP_data1)
is.data.frame(MBP_data1)
attach(MBP_data1)
plot(prft)
plot(MBP_data1)
?scatter
?scatter.plot
?plot
?plot
?plot
attach(MBP_data1)
?plot
install.packages("forge")
install.packages("caret")
library(caret)
install.packages(c("lattice", "ggplot2"))
library(caret)
attach(MBP_data1)
plot(job,pckge,prt+pmt,pmt,prft)
plot(job,pckge,prt,pmt,pmt,prft)
scatter.plot(job,pckge,prt,pmt,pmt,prft)
reg <- glm(prft ~ job + sess_dt + pckge + pmt + due +prt_pmt, na.action = na.exclude)
summary(reg)
MBP.reg.glm <- glm(prft ~ job + sess_dt + pckge + pmt + due +prt_pmt, na.action = na.exclude)
MBP.reg.lm <- lm(prft ~ job + sess_dt + pckge + pmt + due +prt_pmt, na.action = na.exclude)
MBP.reg.lm
MBP.reg.glm
summary(MBP.reg.lm)
MBP_glm_res <- resid(MBP.reg.glm)
MBP_lm_res <-resid(MBP.reg.lm)
MBP_glm_res
plot(prft, MBP_glm_res,
+     ylab="Residuals", xlab="Profit",
+     main="MBP GLM Profits")
abline(0, 0)
lot(prft, MBP_glm_res,
+     ylab="Residuals", xlab="Profit",
+     main="MBP GLM Profits")
plot(prft, MBP_glm_res, ylab="Residuals", xlab="Profit", main="MBP GLM Profits")
abline(0, 0)
plot(prft, MBP_lm_res, ylab="Residuals", xlab="Profit", main="MBP LM Profits")
abline(0, 0)
View(MBP_data)
plot(prft, MBP_data1%Job, ylab="Job", xlab="Profit", main="MBP Job Profit Compare ")
plot(prft, MBP_data1%job, ylab="Job", xlab="Profit", main="MBP Job Profit Compare ")
plot(prft, MBP_data1$job, ylab="Job", xlab="Profit", main="MBP Job Profit Compare ")
job
sort.list(job)
combine.levels(job)
combine.level(job)
library(Hmisc)
combine.level(job)
combine.levels(job)
new_job<- combine.levels(job)
plot(prft, new_job, ylab="Job", xlab="Profit", main="MBP Job Profit Compare ")
MBP.reg.lm <- lm(prft ~ job + sess_dt + pckge + pmt + due +prt_pmt, na.action = na.exclude)
new_job
can(new_job)
sort(job)
job.1<- sort(job)
MBP.job<- paste(job.1, sep = "")
plot(prft, MBP.job, ylab="Job", xlab="Profit", main="MBP Job Profit Compare ")
job.1
?aov
dput(head(MBP_data, 20))
?aov
aov(lm(prft ~ job + sess_dt + pckge + pmt + due +prt_pmt, na.action = na.exclude))
ncol(MBP_data)
nrow(MBP_data)
treatment(MBP_data)
Levels(MBP_data)
Level(MBP_data)
level(MBP_data)
levels(MBP_data)
?levels
summary(MBP_data)
str(MBP_data)
levels(MBP_data$client_name)
names(MBP_data)
aov(lm(prft ~ job + sess_dt + pckge + pmt + due +prt_pmt, data= MBP_data1, na.action = na.exclude))
aov(glm(prft ~ job + sess_dt + pckge + pmt + due +prt_pmt, data= MBP_data1, na.action = na.exclude))
anov(glm(prft ~ job + sess_dt + pckge + pmt + due +prt_pmt, data= MBP_data1, na.action = na.exclude))
source('~/Documents/R Homework and working folder/Stat 435-535_Hw2(1).r', echo=TRUE)
@export
#' @export
' @export
strategy.load.historical.data <- function
(
tickers = spl('DIA,SPY'),
dates = '1900::',
align = 'keep.all',
fill.gaps = T,
adjust = T,
current = F
)
{
strategy.load.historical.data <- function
(
tickers = spl('DIA,SPY'),
dates = '1900::',
align = 'keep.all',
fill.gaps = T,
adjust = T,
current = F
)
{
#*****************************************************************
# Load historical data
#******************************************************************
load.packages('quantmod')
tickers = spl(tickers)
data <- new.env()
for(i in 1:len(tickers)) {
# getSymbols removes ^ from Yahoo indexes
ticker0 = gsub('\\^', '', tickers[i])
temp = try(getSymbols(tickers[i], src = 'yahoo', from = '1900-01-01', env = data, auto.assign = T), TRUE)
if(inherits(temp, 'try-error'))
cat(i, 'out of', len(tickers), 'Error Reading', tickers[i], '\n', sep='\t')
else if(is.null(data[[ tickers[i] ]]))
if( is.null(data[[ ticker0 ]]) )
cat(i, 'out of', len(tickers), 'Error Reading', tickers[i], '\n', sep='\t')
else
cat(i, 'out of', len(tickers), 'Reading', ticker0, format(range(index(data[[ ticker0 ]])), '%d-%b-%Y'), '\n', sep='\t')
else
cat(i, 'out of', len(tickers), 'Reading', tickers[i], format(range(index(data[[ tickers[i] ]])), '%d-%b-%Y'), '\n', sep='\t')
}
View(scores.anova)
install.packages("EuStockMarkets")
library(EuStockMarkets)
library(help = "datasets")
library(datasets)
install.packages("datasets")
sals =scan()
install.packages("vdc")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
EuStockMarkets
JohnsonJohnson
UCBAdmissions
iris
iris
attach(iris)
my.dat <- sample(i=1:n, data=iris, 100)
str(iris)
samp<- sample(iris,35, replace =F, prob= NULL)
samp<- sample(iris, 5, replace =F, prob= NULL)
samp
samp<- sample(iris, 5, replace =TRUE, prob= NULL)
samp
iris.rf <- randomForest(Species ~ ., data=iris, importance=TRUE, proximity=TRUE)
install.packages("randomForest")
library(randomForest)
iris.rf <- randomForest(Species ~ ., data=iris, importance=TRUE, proximity=TRUE)
iris.rf
set.seed(71)
iris.rf <- randomForest(Species ~ ., data=iris, importance=TRUE, proximity=TRUE)
round(importance(iris.rf), 2)
iris.mds <- cmdscale(1 - iris.rf$proximity, eig=TRUE)
iris.mds
str(iris)
d<-c(165 130 167 133 180 150 155 128 212 151 175 146 190 150
210 140 200 148 149 125 158 133 169 135 170 150 172 153
159 128 168 132 174 149 183 158 215 150 195 163 180 156
143 124 240 170 235 165 192 160 187 159)
d<-read.table(as.matrix('/Users/jasonrich/Documents/R Homework and working folder/class.txt''))
d<-read.table(as.matrix('/Users/jasonrich/Documents/R Homework and working folder/class.txt'))
d<-read.table('/Users/jasonrich/Documents/R Homework and working folder/class.txt')
d<-read.table('\Users\jasonrich\Documents\R Homework and working folder\class.txt')
d<-read.table('Users\jasonrich\Documents\R Homework and working folder\class.txt')
d<-read.table('Users/jasonrich/Documents/R Homework and working folder/class.txt')
d<-read.table('/Users/jasonrich/Documents/R Homework and working folder/class.txt')
getwd()
d<-read.table('/Users/jasonrich/Documents/R Homework and working folder/class1.txt')
d<-read.table('header=F, text=class1.txt')
d<-read.table("header=F, text=class1.txt")
d<-read.table("/Users/jasonrich/Documents/R Homework and working folder/class.txt")
d<-read.table("/Users/jasonrich/Documents/R Homework and working folder/class1.txt")
d<-read.table("header=FLASE, /Users/jasonrich/Documents/R Homework and working folder/class1.txt")
d<-read.table("header=FLASE, /Users/jasonrich/Documents/R Homework and working folder/class1.txt")
d<-read.table("/Users/jasonrich/Documents/R Homework and working folder/class1.txt")
d<-read.table("/Users/jasonrich/Documents/R Homework and working folder/class1.txt")
F = 8.9095/8
P = 6.715/5
F/P
F = 8.9095/8/ 6.715/5
F
F = 8.9095/3/ 6.715/5
F
F = 8.9095/3
P = 6.715/5
F/P
F = (8.9095/3)/ (6.715/5)
F
?predict.lm
smker<-c(0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1,1 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1,
0, 1, 0, 1, 0, 0)
smker<-c(0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1,
0, 1, 0, 1, 0, 0)
length(smker)
sbp<-c(135, 122, 130, 148, 146, 129, 162, 160, 144, 180, 166, 138, 152, 138, 140,
134, 145, 142, 135, 142, 150, 144, 137, 132, 149, 132, 120, 126, 161, 170,
152, 164)
quet<- c(2.876, 3.251, 3.100, 3.768,2.979,2.790, 3.668, 3.612, 2.368, 4.637, 3.877,
4.032,4.116,3.673, 3.562, 2.998, 3.360, 3.024, 3.171, 3.401, 3.628, 3.751,
3.296, 3.210,3.301, 3.017, 2.789, 2.956, 3.800, 4.132, 3.962, 4.010)
age<-c(45, 41, 49, 52, 54, 47, 60, 48, 44, 64,59, 51, 64, 56, 54, 50, 49, 46, 57,
56, 56, 58, 53, 50, 54, 48, 43, 43, 63, 63, 62, 65)
sbp<-c(135, 122, 130, 148, 146, 129, 162, 160, 144, 180, 166, 138, 152, 138, 140,
134, 145, 142, 135, 142, 150, 144, 137, 132, 149, 132, 120, 126, 161, 170,
152, 164)
quet<- c(2.876, 3.251, 3.100, 3.768,2.979,2.790, 3.668, 3.612, 2.368, 4.637, 3.877,
4.032,4.116,3.673, 3.562, 2.998, 3.360, 3.024, 3.171, 3.401, 3.628, 3.751,
3.296, 3.210,3.301, 3.017, 2.789, 2.956, 3.800, 4.132, 3.962, 4.010)
age<-c(45, 41, 49, 52, 54, 47, 60, 48, 44, 64,59, 51, 64, 56, 54, 50, 49, 46, 57,
56, 56, 58, 53, 50, 54, 48, 43, 43, 63, 63, 62, 65)
smker<-c(0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1,
0, 1, 0, 1, 0, 0)
plot(quet, sbp)
plot(quet, sbp, xlab="quetelt index of the individuals", ylab="systolic blood pressure", title("Scatter plot d"))
plot(age, sbp, xlab="age of the individuals", ylab="systolic blood pressure", title("Scatter plot d"))
qqplot(quet, sbp, xlab="quetelt index of the individuals", ylab="systolic blood pressure", title("Scatter plot d"))
qqplot(sbp, quet, xlab="quetelt index of the individuals", ylab="systolic blood pressure", title("Scatter plot d"))
qqplot(quet, sbp, xlab="quetelt index of the individuals", ylab="systolic blood pressure", title("Scatter plot d"))
qqnorm(quet, sbp, xlab="quetelt index of the individuals", ylab="systolic blood pressure", title("Scatter plot d"))
plot(quet, sbp, xlab="quetelt index of the individuals", ylab="systolic blood pressure", title("Scatter plot d"))
qqplot(quet, sbp,plot.it = TRUE, xlab="quetelt index of the individuals", ylab="systolic blood pressure", title("Scatter plot d"))
qqplot(quet, sbp, plot.it = FALSE, xlab="quetelt index of the individuals", ylab="systolic blood pressure", title("Scatter plot d"))
qqplot(quet, sbp, plot.it = FALSE, xlab="quetelt index of the individuals", ylab="systolic blood pressure", title("Scatter plot d"))
plot(quet, sbp, plot.it =TRUE, xlab="quetelt index of the individuals", ylab="systolic blood pressure", title("Scatter plot d"))
plot(quet, sbp, xlab="quetelt index of the individuals", ylab="systolic blood pressure", title("SBP/QUET"))
plot(quet, sbp, xlab="QUET", ylab="SBP", title("SBP/QUET"))
plot(age, sbp, xlab="AGE", ylab="SBP", title("SBP/AGE"))
plot(age, quet, xlab="AGE", ylab="QUET", title("QUET/AGE"))
chooseCRANmirror()
install.packages(c(car,MASS )
install.packages(c("car","MASS")
install.packages(c("car","MASS"))
scatterplot(quet, sbp, xlab="QUET", ylab="SBP", title("SBP/QUET"))
library(car)
scatterplot(quet, sbp, xlab="QUET", ylab="SBP", title("SBP/QUET"))
scatterplot(age, sbp, xlab="AGE", ylab="SBP", title("SBP/AGE"))
scatterplot(age, quet, xlab="AGE", ylab="QUET", title("QUET/AGE"))
scatterplot(quet, sbp, xlab="QUET", ylab="SBP", main=("SBP/QUET"))
scatterplot(quet, sbp, xlab="QUET", ylab="SBP", title"SBP/QUET"))
scatterplot(quet, sbp, xlab="QUET", ylab="SBP", title"SBP/QUET"))
scatterplot(quet, sbp, xlab="QUET", ylab="SBP", title("SBP/QUET"))
scatterplot(age, sbp, xlab="AGE", ylab="SBP", title("SBP/AGE"))
scatterplot(quet, sbp, xlab="QUET", ylab="SBP", main=("SBP/QUET"))
scatterplot(age, quet, xlab="AGE", ylab="QUET", title("QUET/AGE"))
scatterplot(age, sbp, xlab="AGE", ylab="SBP", title("SBP/AGE"))
scatterplot(age, quet, xlab="AGE", ylab="QUET", title("QUET/AGE"))
setwd(/Users/jasonrich/Documents/GitHub/R/code")
setwd("/Users/jasonrich/Documents/GitHub/R/code")
lsfit(quet,sbp, wt=NULL, intercept = TRUE)
lsfit(quet,sbp, wt=NULL, intercept = TRUE, tolerance = le-07)
lsfit(quet,sbp, wt=NULL, intercept = TRUE, tolerance = le-07, yname =SBP)
lsfit(quet,sbp, wt=NULL, intercept = TRUE, tolerance = le-07, yname ="SBP")
lsfit(quet,sbp, wt=NULL, intercept = TRUE, tolerance = 1e-07, yname ="SBP")
lse<-lsfit(quet,sbp, wt=NULL, intercept = TRUE, tolerance = 1e-07, yname ="SBP")
plot(lse)
?lm
d1<-lm(sbp~ quet)
plot(d1)
coeff(d1)
d1$coeff
coeff(d1)
?coeff()
?r-squ
corr(quet, sbp)
?cor
cor(quet,sbp)
d1<-lm(formula= sbp ~ quet)
plot(d1)
summary(d1)
b0 = 70.576
sd<-sqrt(var(x))
sd<-sqrt(var(b0))
sd
drop (sd)
drop sd
?drop
drop(sd)
sd<-sqrt(var(d1))
qnorm(.95)
c.i.plus<-70.576+1.644854*12.322
c.i.minus<-70.576-1.644854*12.322
c.i.plus
c.i.minus
weights <- c( 165 ,167 , 180  ,155 ,212  ,175  ,190 , 210  ,200  ,149  ,158  ,169  ,170  , 172 ,159 , 168 ,174  ,183, 215 ,195  , 180 , 143  , 240 , 235  ,192  , 187)
length(weights)
t.s<-b0/12.322
t.s
t.s<-b0/(12.322/32)
t.s
t.s<-b0/(12.322/sqrt(32))
t.s
b1<-21.492
c.i.plus<-21.492 +1.644854*3.545
c.i.plus
c.i.minus<-21.492 -1.644854*3.545
c.i.minus
t.s<-b1/3.545
t.s
predict(d1, interval="prediction")
predict(d1, interval="predict", se.fit=TRUE, ci.fit=TRUE, pi.fit=TRUE, level=0.95)
?predict
d1$coeff
beta.1.hat<-d1$coeff
beta.1.hat
beta.1.hat$quet
beta.1.hat<-d1$quet
beta.1.hat
beta.1.hat<-21.49167
beta.1.hat = 21.49167
beta.1.hat
predict(beta.1.hat,newdate=d1 interval="confidence", level=0.95)
predict(beta.1.hat,newdata=d1 interval="confidence", level=0.95)
predict(beta.1.hat,d1, interval="confidence", level=0.95)
predict(d1$coeff,d1, interval="confidence", level=0.95)
predict(d1$coeff, interval="confidence", level=0.95)
predict(d1, newdata=data.frame(c(21.492)), interval="confidence", level=0.95)
predict(d1, slope=data.frame(c(21.492)), interval="confidence", level=0.95)
p.i<-predict(d1, slope=data.frame(c(21.492)), interval="prediction", level=0.95)
p.i
plot(p.i)
scatterplot(p.i)
predictplot(p.i)
predictionPlot(p.i)
PredictionPlot(p.i)
predictionPlot(d1, slope=data.frame(c(21.492)), interval="prediction", level=0.95, lty = 1, lwd = 3)
predictionplot(d1, slope=data.frame(c(21.492)), interval="prediction", level=0.95, lty = 1, lwd = 3)
predictplot(d1, slope=data.frame(c(21.492)), interval="prediction", level=0.95, lty = 1, lwd = 3)
predictplot(d1, slope=data.frame(c(21.492)), interval="prediction", level=0.95, lty = 1, lwd = 3)
?predictplot
?predictionplot
??predictionplot
??predictPlot
predictplot(d1, newdata=data.frame(c(21.492)), interval="prediction", level=0.95, lty = 1, lwd = 3)
predict(d1, newdata=data.frame(c(21.492)), interval="prediction", level=0.95,se.fit=TRUE, conf.int=FALSE)
